MYCXXFLAGS+= -I. -g  -DHAVE_UINTPTR_T   `pkg-config --cflags protobuf` -Wall
PKG_LIBS+= `pkg-config --libs protobuf` 
PKG_LIBS+= -L/ln/meraki/custom/jdk1.6.0_11/jre/lib/amd64/server -L/ln/meraki/custom/jdk1.6.0_11/jre/lib/amd64 -L/ln/meraki/custom/jdk1.6.0_11/jre/../lib/amd64 -L/ln/meraki/custom/lib -L/ln/meraki/custom/lib64/R/lib/ -L/ln/meraki/custom/hadoop/lib/native/Linux-amd64-64/ -L/ln/meraki/custom/hadoop/lib/native/ -L/ln/meraki/custom/lib/ -L/usr/java/packages/lib/amd64 -ljvm         
#@JAVA_LIBS@
JAVA_HOME=@JAVA_HOME@


USERDIR = ../inst/lib
RINC=`R CMD config --cppflags`
RLIB=-fpic `R CMD config --ldflags`
.PHONY: all cpy

all: $(SHLIB) app

rexp.pb.o: rexp.pb.cc
	 $(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $(MYCXXFLAGS) -c $< -o $@
message.o: message.cc
	 $(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $(MYCXXFLAGS) -c $< -o $@
display.o: display.cc
	 $(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $(MYCXXFLAGS) -c $< -o $@
embedding.o: embedding.cc
	 $(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $(MYCXXFLAGS) -c $< -o $@
rhooks.o: rhooks.cc
	 $(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $(MYCXXFLAGS) -c $< -o $@
serverbridge.o: serverbridge.cc
	 $(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $(MYCXXFLAGS) -c $< -o $@
jni_functions.o: jni_functions.cc
	 $(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $(MYCXXFLAGS) -c $< -o $@
jmessages.o: jmessages.cc
	 $(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $(MYCXXFLAGS) -c $< -o $@

app:  rexp.pb.o message.o display.o embedding.o jni_functions.o jmessages.o
	$(CXX)   -shared -Wl,-export-dynamic ${MYCXXFLAGS} ${PKG_LIBS} ${RINC} ${RLIB} $^ -o imperious.so
	@echo ${JAVA_LIBS}




clean:
	rm -rf *.so *.o



## To -DFileREADER,the sequencefile should be /ln/mapinput
##  rhipe_map_buff_size=1000 /ln/meraki/custom/lib64/R/library/Rhipe/libs/imperious.so --slave --silent --vanilla --max-ppsize=100000 --max-nsize=1G
